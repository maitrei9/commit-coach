# Commit Coach Configuration Example
# Copy this file to .commit-coach.yml and customize for your project

rules:
  # Test coverage rules
  - id: missing-tests
    enabled: true
    severity: warning
    conditions: ["sourceFilesWithoutTests.length > 0"]
    message: "Consider adding tests for new/modified source files"
    metadata:
      testFilePatterns: ["*.test.js", "*.spec.js", "__tests__/**/*"]
  
  # Public API rules
  - id: public-api-removed
    enabled: true
    severity: warning
    conditions: ["removedApis.length > 0"]
    message: "Public API removed - check for downstream dependencies"
  
  - id: public-api-added
    enabled: true
    severity: info
    conditions: ["addedApis.length > 0"]
    message: "New public APIs added - consider documenting them"
  
  # Commit size rules
  - id: large-commit
    enabled: true
    severity: info
    conditions: ["totalLines > 200"]
    message: "Large commit - consider breaking into smaller changes"
    metadata:
      threshold: 200
  
  # Documentation rules
  - id: missing-documentation
    enabled: true
    severity: suggestion
    conditions: ["hasNewFeatures && !hasDocUpdates"]
    message: "Consider updating documentation for new features"
  
  # Feature flag rules
  - id: feature-flags-added
    enabled: true
    severity: suggestion
    conditions: ["featureFlags.length > 0"]
    message: "Document new feature flags and their purpose"
  
  # Breaking change rules
  - id: breaking-changes
    enabled: true
    severity: error
    conditions: ["breakingChanges.length > 0"]
    message: "Breaking changes detected - update version and changelog"
  
  # Commit message rules
  - id: short-commit-message
    enabled: true
    severity: suggestion
    conditions: ["messageLength < 10"]
    message: "Consider adding more context to commit message"
  
  - id: todo-comments
    enabled: true
    severity: info
    conditions: ["hasTodos"]
    message: "TODO/FIXME comments found - track these items"

  # Security rules
  - id: hardcoded-secrets
    enabled: true
    severity: error
    conditions: ["diff.match(/['\"](sk-|pk_|ghp_|gho_|ghu_|ghs_|ghr_|AKIA|ya29\.)/)"]
    message: "Potential hardcoded secret detected - use environment variables instead"

  - id: sql-injection-risk
    enabled: true
    severity: error
    conditions: ["diff.match(/query.*\\$\\{.*\\}|query.*\\+.*\\+/)"]
    message: "Potential SQL injection risk detected - use parameterized queries"

  - id: xss-risk
    enabled: true
    severity: error
    conditions: ["diff.includes('innerHTML') && !diff.includes('textContent')"]
    message: "Potential XSS risk - use textContent instead of innerHTML"

  # Code quality rules
  - id: debug-code
    enabled: true
    severity: warning
    conditions: ["diff.includes('console.log') || diff.includes('debugger') || diff.includes('alert(')"]
    message: "Debug code detected - remove before merging"

  - id: large-file-addition
    enabled: true
    severity: warning
    conditions: ["files.some(f => f.status === 'added' && f.additions > 1000)"]
    message: "Large file(s) added - consider if these should be in version control"

  - id: dependency-update
    enabled: true
    severity: info
    conditions: ["files.some(f => f.path.includes('package.json') || f.path.includes('yarn.lock') || f.path.includes('pnpm-lock.yaml'))"]
    message: "Dependencies updated - run tests and check for breaking changes"

  - id: missing-error-handling
    enabled: true
    severity: warning
    conditions: ["diff.includes('async ') && !diff.includes('try') && !diff.includes('catch')"]
    message: "Async function added without error handling - consider try/catch blocks"

  - id: typescript-any-type
    enabled: true
    severity: warning
    conditions: ["files.some(f => f.path.endsWith('.ts')) && diff.includes(': any')"]
    message: "Avoid using 'any' type - use specific types for better type safety"

  # Workflow rules
  - id: merge-conflict-markers
    enabled: true
    severity: error
    conditions: ["diff.includes('<<<<<<<') || diff.includes('>>>>>>>') || diff.includes('=======')"]
    message: "Merge conflict markers detected - resolve conflicts before committing"

  - id: binary-file-addition
    enabled: true
    severity: warning
    conditions: ["files.some(f => f.status === 'added' && /\.(jpg|jpeg|png|gif|pdf|zip|exe|dll|bin|so|dylib)$/i.test(f.path))"]
    message: "Binary file(s) added - ensure they're necessary and properly sized"

  - id: config-file-changes
    enabled: true
    severity: info
    conditions: ["files.some(f => f.path.includes('config') || f.path.includes('.env') || f.path.includes('settings'))"]
    message: "Configuration files changed - verify all environments are updated"

# Output configuration
output:
  format: console  # console, comment, status-check, report
  includeSummary: true
  maxInsights: 10

# Integration settings
integrations:
  github:
    token: "${GITHUB_TOKEN}"  # Use environment variable
    owner: "your-org"
    repo: "your-repo"
    commentOnPR: true
    createStatusCheck: true
  
  console:
    colorize: true
    verbose: false

# Thresholds and filtering
thresholds:
  minConfidence: 0.5
  maxInsightsPerType:
    error: 5
    warning: 8
    suggestion: 10
    info: 15
  skipOnSmallChanges: true
  smallChangeThreshold: 10
